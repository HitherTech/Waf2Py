# -*- coding: utf-8 -*-
from gluon.scheduler import Scheduler
import json

#Task to update the stats on dashboard
def scheduler_summary():
    """q = db(db.production).select(db.production.id_rand, db.production.app_name)
    for app in q:
        f = open('/opt/waf/nginx/var/log/{}/{}_audit.log'.format(app.app_name, app.app_name),'r', encoding="utf8", errors='ignore')
        x = f.read()
        f.close()
        notice = 0
        warning = 0
        critical = 0
        error = 0
        transactions = x.splitlines()
        requests = len(transactions)
        for i in transactions:
            row = json.loads(str(i, 'utf-8', errors='ignore'))
            for ii in row['transaction']['messages']:
                if ii['details']['severity'] == '0':
                    notice +=1
                elif ii['details']['severity'] == '1':
                    warning +=1
                elif ii['details']['severity'] == '2':
                    critical +=1
        record = (db.summary.id_rand == app.id_rand)
        db.summary.update_or_insert(record, critical=int(critical), warning=int(warning), notice=int(notice), error=int(error), total_requests=int(requests))
        #print('Critical: {} - Warning: {} - Notice: {} - Error: {} - Total: {}'.format(str(critical), str(warning), str(notice), str(error), str(requests)))
      """
    pass
daily_task_scheduler = Scheduler(db, tasks=dict(my_daily_task=scheduler_summary()))
